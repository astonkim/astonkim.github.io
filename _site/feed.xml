<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-09-25T11:23:24+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">DS/ML Devlog</title><subtitle>공부한 내용들을 잊지 않게 기록하고 공유하고자 끄적이는 Devlog 입니다. 주로 Data와 Machine Learning, Deep Learning에 대해 다룹니다.</subtitle><author><name>Aston Kim</name></author><entry><title type="html">Github.io 블로그 만들기 - 3</title><link href="http://localhost:4000/github/2023/09/25/yat-theme.html" rel="alternate" type="text/html" title="Github.io 블로그 만들기 - 3" /><published>2023-09-25T00:00:00+09:00</published><updated>2023-09-25T00:00:00+09:00</updated><id>http://localhost:4000/github/2023/09/25/yat-theme</id><content type="html" xml:base="http://localhost:4000/github/2023/09/25/yat-theme.html"><![CDATA[<h2 id="3-1--내가-yat-테마를-선택한-이유">3-1.  내가 YAT 테마를 선택한 이유</h2>

<p>내가 블로그 디자인 테마를 고르면서 가장 중요하게 생각한 것은 <span style="color:orangered"> <strong>심플한 UI</strong> </span>와 중요한 것들을 한 눈에 보기 좋은 <span style="color:orangered"> <strong>포인트되는 색상 1~2가지</strong> </span>가 가미된 세련된 디자인.</p>

<p>그래서 가장 먼저, 기능이 너무 많거나 transition effect가 화려하다거나, 너무 colorful해서 눈이 아프고 지저분한 테마는 전부 거르면서 스크롤 쭉쭉~ 내리다가 30분 만에 고심 끝에 선택한 테마가 바로 <span style="color:orangered"> <strong>YAT 테마</strong> </span>이다.</p>

<p><strong>딱 필요한 기능 위주</strong>로 구성되어 있고 가독성이 좋았다. 그리고 내가 좋아하는 오렌지 색의 포인트 색상이 아주 마음에 들었다. 몇 군데만 손보면 충분히 내가 원하는 느낌으로 <strong>customizing하기 편할 것</strong> 같다는 생각이 들었다. (나의 Front-end 실력은… basic한 것들만 아는 정도.)</p>

<ul>
  <li><a href="https://jekyll-themes.com/jeffreytse/jekyll-theme-yat">Jekyll YAT 테마를 찾은 곳! DEMO 뿐만 아니라 github CODE도 볼 수 있다.</a></li>
  <li><a href="https://github.com/jeffreytse/jekyll-theme-yat?ref=jekyll-themes.com">YAT 테마를 다운 받을 수 있는 github 링크는 편의를 위해 여기로 바로 들어가면 된다.</a></li>
</ul>

<p><br /></p>

<h2 id="3-2--yat-테마의-구성-뜯어보기">3-2.  YAT 테마의 구성 뜯어보기</h2>

<p>자, 그럼 내 원 Pick! YAT 테마의 구성을 빠르게 뜯어보자.
내가 블로그를 선택하는 과정에서, <strong>DEMO 사이트를 둘러보면서 빠르게 스캔한 것들</strong> 위주로 적었다.</p>

<p><br /></p>

<h3 id="home">HOME</h3>

<p>먼저 YAT 테마의 홈 화면을 보자.</p>

<p><img src="https://i.imgur.com/wdBZ8Jm.png" alt="" /></p>

<p>일단 가장 먼저 <span style="color:orangered"><strong>상단 바 구성</strong> </span>을 좀 보자.
상단바 좌측에는 <strong>블로그 이름 및 로고</strong> 등을 넣을 수 있다.
그리고 우측에 다양한 <strong>메뉴 목록, 그리고 Google Translate</strong>를 이용한 번역 서비스 기능까지 있다.</p>

<p>메뉴 목록 구성 같은 경우는 내가 수정할 수 있는 부분이라 크게 신경쓰지 않았고, Google Translate를 이용한 번역 기능이 마음에 들었다. 
(이 기능도 넣을 수 있긴 하겠지만, 이 시점에서 나는 방법을 몰랐기에… 추후에 다운받은 테마의 코드를 뜯어보며 공부했다.)</p>

<p><br /></p>

<p><img src="https://i.imgur.com/ozQGk5B.png" alt="" /></p>

<p>페이지를 스크롤 다운하면 <span style="color:orangered"><strong>포스팅했던 글들</strong> </span>이 볼드 처리된 제목, 본문 앞 일부분의 내용, 그리고 첨부한 사진과 함께 표시된다. 그리고 눈에 띄는 <strong>오렌지 색 뱃지(TOP, NEW, 등)</strong> 와 각 포스트의 태그들, 작성날짜, 작성자, 몇시간 전 작성인지까지 등 포스트의 기본 정보를 한 눈에 볼 수 있어서 마음에 들었다.</p>

<p>우측 측면에는 <strong>각 포스트 별 설정한 카테고리로 sorting해서 보여주는</strong> <span style="color:orangered"><strong>사이드 슬라이드 블록</strong> </span>이 있다. 각 카테고리 별 포스트 수까지 표시되어 아주 완벽!</p>

<p>그리고, 우측 하단에는 동그란 화살표 버튼이 있는데, 클릭하면 <strong>한 번에 페이지의</strong> <span style="color:orangered"><strong>최상단으로 스크롤업</strong> </span>해주는 기능이 있었다. 모바일에서 유용하게 쓰이는 기능 중 하나인데, 이 버튼을 보고 뭔가 <strong>모바일에서 봤을 때도 UI가 아주 만족스러울 것 같은 예감</strong>이 들었다.</p>

<p><br /></p>

<h3 id="about">ABOUT</h3>

<p><img src="https://i.imgur.com/2veAXdT.png" alt="" /></p>

<p>ABOUT 창에서는 <strong>블로그에 대한 소개 또는</strong> <span style="color:orangered"><strong>글쓴이에 대한 자기소개</strong> </span>를 적을 수 있는 공간이 마련되어 있다.</p>

<p>우측 측면에는 <span style="color:orangered"><strong>TOC(Table Of Contents)</strong> </span>를 볼 수 있는 사이드 바가 있다.</p>

<p>페이지 하단에는, <span style="color:orangered"><strong>Copyright와 사용한 Theme에 대한 정보</strong> </span>등을 명시할 수 있는 분리된 공간이 존재한다.</p>

<p><br /></p>

<h3 id="archives">ARCHIVES</h3>

<p><img src="https://i.imgur.com/hneagYy.png" alt="" /></p>

<p>ARCHIVES 창에서는 <span style="color:orangered"><strong>연도 별로 정리</strong> </span>된 내 포스트를 볼 수 있다.</p>

<p>각 해 마다 내가 공부한 것들을 한 눈에 정리해서 보기 쉬워 유용할 것 같다는 생각이 들었다.</p>

<p><br /></p>

<h3 id="categories">CATEGORIES</h3>

<p><img src="https://i.imgur.com/Y4maFi1.png" alt="" /></p>

<p>CATEGORIES 창에서는 내가 각 포스트의 <strong>meta data에 설정한</strong> <span style="color:orangered"><strong>category별</strong> </span>로 나눠서 볼 수 있다.</p>

<p>지금까지 내가 어떤 (큰)주제들로 공부를 했는지 한 눈에 보기 쉽고, 찾고자(검색하고자) 하는 내용과 관련된 글을 빠르게 찾을 수 있는 지표가 되어줄 것이다.</p>

<p><br /></p>

<h3 id="tags">TAGS</h3>

<p><img src="https://i.imgur.com/kj9afZg.png" alt="" /></p>

<p>마지막으로 TAGS 창에서도 마찬가지로 내가 각 포스트 <strong>meta data에 설정한</strong> <span style="color:orangered"><strong>tags(해쉬태그)들로 포스트를 분류</strong> </span>하여 보여준다.</p>

<p><br /></p>

<h3 id="dark-mode">Dark Mode</h3>

<p><img src="https://i.imgur.com/e6lU8D9.png" alt="" /></p>

<p>그리고 <strong>라이트 모드</strong>뿐만 아니라 <span style="color:orangered"><strong>다크 모드</strong> </span>도 지원된다.</p>]]></content><author><name>astonkim</name></author><category term="Github" /><category term="github_블로그" /><summary type="html"><![CDATA[3-1. 내가 YAT 테마를 선택한 이유]]></summary></entry><entry><title type="html">Github.io 블로그 만들기 - 2</title><link href="http://localhost:4000/github/2023/09/22/github-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0-2.html" rel="alternate" type="text/html" title="Github.io 블로그 만들기 - 2" /><published>2023-09-22T00:00:00+09:00</published><updated>2023-09-22T00:00:00+09:00</updated><id>http://localhost:4000/github/2023/09/22/github-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0-2</id><content type="html" xml:base="http://localhost:4000/github/2023/09/22/github-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0-2.html"><![CDATA[<h2 id="2-1-github에서-새로운-repository-생성">2-1. Github에서 새로운 Repository 생성</h2>

<p>다음과 같이 <span style="color:orangered"> <strong>Repository name</strong> </span>은 <code class="language-plaintext highlighter-rouge">username.github.io</code>로 설정한다. <code class="language-plaintext highlighter-rouge">username</code>은 본인의 Github username을 의미한다.</p>

<p><img src="https://i.imgur.com/VeIFHz8.png" alt="" /></p>

<p><br /></p>

<p>초록색 <code class="language-plaintext highlighter-rouge">&lt; &gt; Code</code> 버튼을 클릭해서 Local로 Clone할 때 필요한 <span style="color:orangered"> <strong>HTTPS 주소를 Copy</strong> </span>하자!</p>

<p>(필자의 Repository는 무언가로 가득 차 있지만, 현재 단계로서는 방금 만들었기 때문에 비어있거나 README 파일 정도 들어가 있으면 성공!)</p>

<p><img src="https://i.imgur.com/utRN2DZ.png" alt="" /></p>

<p><br /></p>

<p>Github 블로그를 관리할 폴더를 하나 만든 후, 다음과 같은 <span style="color:orangered"> <strong>git clone 명령어</strong>를 실행하여 위의 Repository를 해당 폴더(로컬 환경)로 clone </span>해 온다.</p>

<p>필자는 <code class="language-plaintext highlighter-rouge">/User/skykim</code> 안에 <code class="language-plaintext highlighter-rouge">Github</code>라는 폴더를 생성했기 때문에, 다음과 같은 <code class="language-plaintext highlighter-rouge">cd</code> 명령어로 해당 폴더로 이동한다.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cd </span>Github
</code></pre></div></div>

<p>해당 폴더로 이동한 상태에서, 다음과 같은 git clone 명령어를 실행하자.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git clone https://github.com/astonkim/astonkim.github.io.git
</code></pre></div></div>

<p>성공적으로 Clone 되었다면, <code class="language-plaintext highlighter-rouge">cd</code> 명령어로 클론된 <code class="language-plaintext highlighter-rouge">github.io</code> 폴더로 들어가자.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cd </span>astonkim.github.io
</code></pre></div></div>

<p><br /></p>

<h2 id="2-2-마음에-드는-jekyll-테마-선택-후-다운로드">2-2. 마음에 드는 Jekyll 테마 선택 후, 다운로드</h2>

<p><span style="color:orangered"> <strong>필자가 선택한 Jekyll 테마는 YAT!</strong> </span></p>

<p>👉 <a href="https://jekyll-themes.com/jeffreytse/jekyll-theme-yat">https://jekyll-themes.com/jeffreytse/jekyll-theme-yat</a></p>

<p>👉 <a href="https://github.com/jeffreytse/jekyll-theme-yat?ref=jekyll-themes.com">https://github.com/jeffreytse/jekyll-theme-yat?ref=jekyll-themes.com</a></p>

<p>테마는 아래의 사이트들에서 무료 및 유료 테마를 보고 다운로드할 수 있다.</p>
<ul>
  <li><a href="http://jekyllthemes.org/">http://jekyllthemes.org/</a></li>
  <li><a href="http://themes.jekyllrc.org/">http://themes.jekyllrc.org/</a></li>
  <li><a href="https://jekyllthemes.io/">https://jekyllthemes.io/</a></li>
  <li><a href="https://jekyll-themes.com/">https://jekyll-themes.com/</a></li>
</ul>

<p><br /></p>

<p>선택한 테마의 Github에서 초록색 <code class="language-plaintext highlighter-rouge">&lt; &gt; Code</code> 버튼 클릭 후, 가장 하단의 <code class="language-plaintext highlighter-rouge">Download ZIP</code>을 클릭하여 <code class="language-plaintext highlighter-rouge">.zip</code>파일을 다운로드하자.</p>

<p><img src="https://i.imgur.com/dY3E3TM.png" alt="" /></p>

<p><br /></p>

<p>다운로드된 파일의 압축을 풀고, <span style="color:orangered"> <strong>폴더 안의 내용물을 전부 복사</strong></span>해서 Clone 했던 내 github.io 블로그 Repository 폴더 <span style="color:orangered"> <strong><code class="language-plaintext highlighter-rouge">깃허브아이디.github.io</code> 위치에 전부 붙여넣기</strong></span>한다.</p>

<p><br /></p>

<blockquote>
  <p><strong>🚨 Warning: 내용물 복사 시, 주의사항!</strong></p>

  <ul>
    <li>압축을 푼 <strong>폴더 자체를 복사 붙여넣기 하는 것이 아닌,</strong> 폴더 안의 테마 내용물들만 전부 복사하여 붙여넣어야 한다.</li>
  </ul>
</blockquote>

<p><br /></p>

<h2 id="2-3-github-pages-server와-연결하기">2-3. Github Pages Server와 연결하기</h2>

<p>아까 <code class="language-plaintext highlighter-rouge">cd</code> 명령어로 <code class="language-plaintext highlighter-rouge">astonkim.github.io</code> 폴더 안으로 들어가있던 Terminal을 다시 띄우고, 다음 명령어를 차례대로 실행하자.</p>

<p><span style="color:orangered"> <strong>git add -&gt; git commit -&gt; git push</strong></span></p>

<p>아래의 <strong><code class="language-plaintext highlighter-rouge">git add .</code></strong> 명령어는 git에서 <strong>commit을 하기 위해 stage에 추가하는 명령어</strong> 중 하나로, 특정 파일 한 개가 아닌, <code class="language-plaintext highlighter-rouge">.</code> 은 전체 파일을 전부 추가하라는 명령어이다.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git add <span class="nb">.</span>
</code></pre></div></div>

<p><br /></p>

<blockquote>
  <p><strong>📙 NOTE: 특정 파일 한 개만 git add 하는 명령어</strong></p>

  <p>아래의 명령어는 hello_world라는 text 파일 하나만 add 해주는 명령어이다.</p>
  <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git add hello_world.txt
</code></pre></div>  </div>
  <p>아래의 명령어는 git 상태를 보기 위한 상태 메세지 명령어이다.</p>
  <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git status
</code></pre></div>  </div>
</blockquote>

<p><br /></p>

<p>아래의 <strong><code class="language-plaintext highlighter-rouge">git commit -m '커밋메시지'</code></strong> 명령어는 <strong>git에서 현재 버전에 대한 내용과 함께 commit하는 명령어</strong>이다.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git commit <span class="nt">-m</span> <span class="s1">'Add YAT theme files'</span>
</code></pre></div></div>
<p><br /></p>

<blockquote>
  <p><strong>📙 NOTE: commit 메세지 작성 Rules</strong></p>

  <p>commit 메시지는 현재 버전에 대한 내용을 명확하게 작성해야하며, 어느정도 사람들끼리 정해놓은 메세지 작성법이 있다.</p>

  <p>👉 <a href="https://meetup.toast.com/posts/106">https://meetup.toast.com/posts/106</a></p>
</blockquote>

<p><br /></p>

<p>아래의 <strong><code class="language-plaintext highlighter-rouge">git push</code></strong> 명령어는 git에 현재 폴더를 그대로 업로드 하는 것이 아니라, <strong>지금까지의 이력/버전(commit)을 <code class="language-plaintext highlighter-rouge">push</code> 하는 것!</strong></p>

<p>working directory, staging area의 변경 사항들은 원격저장소로 <code class="language-plaintext highlighter-rouge">push</code> 되지 않기 때문에 <strong><code class="language-plaintext highlighter-rouge">push</code> 전에 <code class="language-plaintext highlighter-rouge">git status</code> , <code class="language-plaintext highlighter-rouge">git log</code> 를 통해서 확인하는 습관</strong>을 가져야한다.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git push
</code></pre></div></div>

<p><br /></p>

<p>드디어 <a href="[https://깃허브아이디.github.io]">https://깃허브아이디.github.io</a> 에 접속하면, 테마가 적용된 본인의 블로그를 확인 할 수 있게 된다.</p>]]></content><author><name>astonkim</name></author><category term="Github" /><category term="github_블로그" /><summary type="html"><![CDATA[2-1. Github에서 새로운 Repository 생성]]></summary></entry><entry><title type="html">Github.io 블로그 만들기 - 1</title><link href="http://localhost:4000/github/2023/09/21/github-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0-1.html" rel="alternate" type="text/html" title="Github.io 블로그 만들기 - 1" /><published>2023-09-21T00:00:00+09:00</published><updated>2023-09-21T00:00:00+09:00</updated><id>http://localhost:4000/github/2023/09/21/github-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0-1</id><content type="html" xml:base="http://localhost:4000/github/2023/09/21/github-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0-1.html"><![CDATA[<p><span style="color:orangered"> Apple의 <strong>M1 Silicon Mac 환경</strong></span>에서 github.io 블로그를 만들어보고자 한다.</p>

<p>현재의 나와 같을 미래의 초보 개발자들을 위해 필자가 겪었던 오류 뿐만 아니라, 과정을 자세히(친절히) 풀어 써보고자 한다.</p>

<h2 id="1-1-ruby-rbenv-설치">1-1. Ruby (rbenv 설치)</h2>

<p>Mac 유저 중 github.io 블로그를 만들기 위해 구글링을 해본 사람들은 다들 프로세스를 따라하다가 <span style="color:orangered"> <strong>Ruby 설치 과정에서 다음과 같은 오류</strong></span>를 직면한다. (필자도 그랬음.)</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gem <span class="nb">install </span>bundler

ERROR:  While executing gem ... <span class="o">(</span>Gem::FilePermissionError<span class="o">)</span>
    You don<span class="s1">'t have write permissions for the /Library/Ruby/Gems/2.3.0 directory.
</span></code></pre></div></div>

<p><br /></p>

<p><span style="color:orangered"> <strong>Mac은 시스템에서 이미 Ruby를 사용하고 있기 때문에,</strong> </span>시스템에 이미 있던 Ruby에서 <code class="language-plaintext highlighter-rouge">gem install bundler</code> 명령어를 실행하면 다음과 같이 <span style="color:orangered"> <strong>Permission Error</strong></span>가 나는 것!</p>

<p>이 때 당황하지 말고,</p>

<p><span style="color:orangered"> <strong>brew를 먼저 update</strong> 후, <strong><code class="language-plaintext highlighter-rouge">brew</code>를 통해 <code class="language-plaintext highlighter-rouge">rbenv</code>를 설치</strong>하자.</span></p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>brew update
</code></pre></div></div>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>brew <span class="nb">install </span>rbenv ruby-build
</code></pre></div></div>

<p><br /></p>

<p><code class="language-plaintext highlighter-rouge">rbenv</code>가 잘 설치되었는지 다음 명령어로 확인하자.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>rbenv versions
</code></pre></div></div>

<p><strong>현재 Mac system에 있는 Ruby를 사용 중</strong>임을 알 수 있다.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">*</span> system <span class="o">(</span><span class="nb">set </span>by /Users/skykim/.rbenv/version<span class="o">)</span>
</code></pre></div></div>

<p><br /></p>

<p>맥 system Ruby가 아닌, <span style="color:orangered"> <strong>rbenv로 관리되는 Ruby 설치가 필요</strong></span>하다.</p>

<p>다음 명령어로 <strong>설치 가능한 Ruby의 버전들을 먼저 확인</strong>하자.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>rbenv <span class="nb">install</span> <span class="nt">-l</span>
</code></pre></div></div>

<p><img src="https://i.imgur.com/nS8HBeU.png" alt="" /></p>

<p>필자는 가장 최신 버전 3.2.2을 설치했다. (2023.09.18 기준)</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>rbenv <span class="nb">install </span>3.2.2
</code></pre></div></div>

<p><br /></p>

<p><code class="language-plaintext highlighter-rouge">rbenv</code>로 Ruby의 버전을 다시 확인하자.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>rbenv versions
</code></pre></div></div>

<p>다음과 같이 별 기호가 system에 붙어 있는 걸 보니, 여전히 system Ruby를 사용중이지만, <strong>아래에 방금 설치한 3.2.2 버전이 보인다.</strong></p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">*</span> system
  3.2.2 <span class="o">(</span><span class="nb">set </span>by/Users/skykim/.rbenv/version<span class="o">)</span>
</code></pre></div></div>

<p><br /></p>

<p>이 때, <strong><code class="language-plaintext highlighter-rouge">rbenv</code>로 global version을 방금 설치한 3.2.2로 변경</strong>하자.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>rbenv global 3.2.2
</code></pre></div></div>

<p>마지막으로 다시 버전을 확인하면,</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>rbenv versions
</code></pre></div></div>

<p>다음과 같이 별 기호가 성공적으로 3.2.2 옆으로 옮겨 간 것을 볼 수 있다. (즉, 3.2.2 버전을 global로 사용중)</p>

<p><img src="https://i.imgur.com/MjW9P43.png" alt="" /></p>

<p><br /></p>

<p>마지막으로는, <span style="color:orangered"> <strong>rbenv PATH를 추가</strong></span>해 주어야 하는데, <span style="color:orangered"> 본인이 사용하는 Shell의 설정파일(<code class="language-plaintext highlighter-rouge">.zshrc</code> or <code class="language-plaintext highlighter-rouge">.bashrc</code>)을 열어</span> 다음과 같은 코드를 추가하자.</p>

<p>다음 명령어로 <strong><code class="language-plaintext highlighter-rouge">.zshrc</code> 설정파일</strong>을 열어보자. <strong>(필자는 zsh를 사용)</strong></p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>vim ~/.zshrc
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">i</code> 키를 눌러 – INSERT – 모드로 변경한 후, 아래의 코드를 추가하자.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[[</span> <span class="nt">-d</span> ~/.rbenv  <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="se">\</span>
  <span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="k">${</span><span class="nv">HOME</span><span class="k">}</span>/.rbenv/bin:<span class="k">${</span><span class="nv">PATH</span><span class="k">}</span> <span class="o">&amp;&amp;</span> <span class="se">\</span>
  <span class="nb">eval</span> <span class="s2">"</span><span class="si">$(</span>rbenv init -<span class="si">)</span><span class="s2">"</span>
</code></pre></div></div>

<p><img src="https://i.imgur.com/Uejm8Ow.png" alt="Uejm8Ow.png" /></p>

<p>추가했다면 <code class="language-plaintext highlighter-rouge">esc</code> 키를 누른 후, <code class="language-plaintext highlighter-rouge">:wq!</code> 를 입력하면, 저장 및 나가기 완료!</p>

<p>그러고 나서 처음에 오류가 났던 <code class="language-plaintext highlighter-rouge">gem install bundler</code> 명령어를 실행하면, 정상적으로 실행된다.</p>

<p><br /></p>

<h2 id="1-2-jekyll--bundler-설치">1-2. Jekyll &amp; bundler 설치</h2>

<p>다음으로는 <span style="color:orangered"> <strong><code class="language-plaintext highlighter-rouge">gem install</code> 명령어</strong>로 <strong>Jekyll, bundler</strong>를 설치</span>해야한다.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gem <span class="nb">install </span>jekyll bundler
</code></pre></div></div>

<p><br /></p>

<blockquote>
  <p><strong>📙 NOTE: What is ‘gem’?</strong></p>

  <ul>
    <li>
      <p>‘gem’은 분산 패키지 시스템으로 라이브러리의 작성이나 공개, 설치를 도와주는 시스템.</p>
    </li>
    <li>
      <p>Linux에서의 apt 시스템과 유사하다. Ruby는 gem을 사용하여 라이브러리 설치를 진행한다는 것을 알아두자!</p>
    </li>
  </ul>
</blockquote>

<p><br /></p>

<p>Jekyll이 잘 설치되었는지 확인하면 끝!</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>jekyll <span class="nt">-v</span>
</code></pre></div></div>

<p><img src="https://i.imgur.com/T3imNhx.png" alt="" /></p>]]></content><author><name>astonkim</name></author><category term="Github" /><category term="github_블로그" /><summary type="html"><![CDATA[Apple의 M1 Silicon Mac 환경에서 github.io 블로그를 만들어보고자 한다.]]></summary></entry><entry><title type="html">Opening my devlog! 🎉</title><link href="http://localhost:4000/aston_kim/2023/09/20/welcome-to-my-devlog.html" rel="alternate" type="text/html" title="Opening my devlog! 🎉" /><published>2023-09-20T00:00:00+09:00</published><updated>2023-09-20T00:00:00+09:00</updated><id>http://localhost:4000/aston_kim/2023/09/20/welcome-to-my-devlog</id><content type="html" xml:base="http://localhost:4000/aston_kim/2023/09/20/welcome-to-my-devlog.html"><![CDATA[<h2 id="인공지능-데이터사이언스-관련-블로그를-오픈하며">인공지능, 데이터사이언스 관련 블로그를 오픈하며…</h2>

<p>안녕하세요! 👋</p>

<p>동국대학교에서 경영과 데이터사이언스 소프트웨어를 복수 전공하고 있는 김남민 입니다.</p>

<p>이 블로그는 학교 공부 및 프로젝트, 그리고 개인적인 공부를 기록하기 위해 만들어졌습니다.</p>

<p>개발 블로그를 오픈한 궁극적인 목적은 <strong>“자기 발전”</strong> 입니다.</p>

<p>스스로 공부한 것들의 과정을 기록하면서 해당 부분에 대해 다시 한 번 정확히 이해하고 정리할 수 있는 기회의 창을 열고자 합니다.</p>

<p>그리고, 내가 겪었던 <strong>technical한 issue들</strong>부터 <strong>다양한 경험을 통해 얻은 tip</strong>을 다른 사람들(지금의 나와, 같은 문제로 머리를 꽁꽁 싸메고 있을 미래의 누군가)와 공유하고자 합니다.</p>

<h3 id="-앞으로-포스팅할-내용들에-대하여">✅ 앞으로 포스팅할 내용들에 대하여…</h3>

<p>앞으로 이 블로그에는 다음과 같은 내용들이 포스팅 될 예정입니다.</p>

<ul>
  <li>
    <p><strong>데이터사이언스</strong> 관련 내용</p>

    <ul>
      <li>
        <p>데이터사이언스 공부를 위해 알아야 하는 수학적/통계적 지식에 관한 이론적 내용</p>
      </li>
      <li>
        <p>데이터 분석과 시각화 툴 사용법 (Numpy, Pandas, Matplotlib, Seaborn, Tableau, etc.)</p>
      </li>
      <li>
        <p>데이터사이언스 관련 프로젝트 과정 및 결과 (개인 프로젝트, 학교 프로젝트, kaggle, 공모전 등)</p>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>인공지능</strong> 관련 내용</p>

    <ul>
      <li>
        <p>인공지능 공부를 위해 알아야 하는 수학적/통계적 지식에 관한 이론적 내용</p>
      </li>
      <li>
        <p>인공지능 모델 구현을 위한 프로그래밍 언어 및 프레임워크 사용법 (Python, Tensorflow, Pytorch, etc.)</p>
      </li>
      <li>
        <p>NLP 자연어 처리, 추천 시스템, 강화 학습 등에 대한 공부 내용</p>
      </li>
      <li>
        <p>인공지능 관련 프로젝트 과정 및 결과 (개인 프로젝트, 학교 프로젝트, kaggle, 공모전 등)</p>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>그 외</strong> 내용</p>

    <ul>
      <li>
        <p>인상 깊은 세미나 정리 내용</p>
      </li>
      <li>
        <p>개발 관련 서적 리뷰</p>
      </li>
      <li>
        <p>Github 협업툴 사용법, 개발 환경 구축 방법, 옵시디언 사용법 등 etc.</p>
      </li>
    </ul>
  </li>
</ul>

<p>일단 지금 당장 생각나는 것들은 이러한 내용들이고, 앞으로 더 추가되거나 빠질 내용들이 있을 것 같습니다.</p>

<h3 id="-마치며">✅ 마치며…</h3>

<p>이 블로그를 통해 많은 분들과 소통하고, 지식을 공유하며, 더 나아가 <strong>함께 성장</strong>할 수 있기를 바랍니다.</p>

<p>감사합니다! 🙏</p>

<p>p.s. 그리고, 이 블로그는 <strong>개인적인 공부를 위한 공간</strong>이기 때문에, <strong>포스팅 주기는 불규칙적</strong>일 것 같습니다. 😅</p>]]></content><author><name>astonkim</name></author><category term="Aston_Kim" /><category term="github_블로그" /><summary type="html"><![CDATA[인공지능, 데이터사이언스 관련 블로그를 오픈하며…]]></summary></entry></feed>